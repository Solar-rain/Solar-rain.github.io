<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法小笔记</title>
      <link href="/2023/04/07/%E7%AE%97%E6%B3%95%E5%B0%8F%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/04/07/%E7%AE%97%E6%B3%95%E5%B0%8F%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="算法小笔记"><a href="#算法小笔记" class="headerlink" title="算法小笔记"></a>算法小笔记</h1><h2 id="IO模板"><a href="#IO模板" class="headerlink" title="IO模板"></a>IO模板</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line">import java.math.*;</span><br><span class="line"></span><br><span class="line">public class io &#123;</span><br><span class="line">final static BufferedReader cin  = new BufferedReader(new InputStreamReader(System.in));</span><br><span class="line">final static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) throws IOException&#123;</span><br><span class="line">String[] ss = cin.readLine().split(&quot; &quot;);</span><br><span class="line">out.println(Integer.parseInt(ss[0])+Integer.parseInt(ss[1]));</span><br><span class="line">ss = cin.readLine().split(&quot; &quot;);</span><br></pre></td></tr></table></figure><h3 id="1-深拷贝问题"><a href="#1-深拷贝问题" class="headerlink" title="1.深拷贝问题"></a>1.深拷贝问题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">     List&lt;Integer&gt; newlist = new ArrayList&lt;&gt;();</span><br><span class="line">     newlist.addAll(list);</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">     int[] array = &#123;1,2,3,4,5,6&#125;;</span><br><span class="line">     int[] array2 = new int[6];</span><br><span class="line">     array2 = Arrays.copyOf(array,array.length);</span><br></pre></td></tr></table></figure><h3 id="2-排序问题"><a href="#2-排序问题" class="headerlink" title="2.排序问题"></a>2.排序问题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Integer[] arr = new Integer[11];</span><br><span class="line">        for (int i = 10; i &gt; 0; i--) &#123;</span><br><span class="line">            arr[i] = 11-i;</span><br><span class="line">        &#125;</span><br><span class="line">        //sort里面如果重写的化不能是int,char,double</span><br><span class="line">        Arrays.sort(arr,(a,b)-&gt; &#123;</span><br><span class="line">            return b - a;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        List&lt;Integer&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">        list.sort((a, b) -&gt; a - b);</span><br></pre></td></tr></table></figure><h3 id="3-数据大小问题"><a href="#3-数据大小问题" class="headerlink" title="3.数据大小问题"></a>3.数据大小问题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">long.max &gt; 1e18</span><br><span class="line">Integer.max &gt; 1e10</span><br><span class="line">再大了采用BigInteger</span><br><span class="line">String a = sc.nextLine();</span><br><span class="line">        String b = sc.nextLine();</span><br><span class="line">        BigInteger x = new BigInteger(a);</span><br><span class="line">        BigInteger y = new BigInteger(b);</span><br><span class="line">        //add</span><br><span class="line">        x = x.add(y);</span><br><span class="line">        //subtract</span><br><span class="line">        x = x.subtract(y);</span><br><span class="line">        //multiply</span><br><span class="line">        x= x.multiply(y);</span><br><span class="line">        //divide</span><br><span class="line">        x = x.divide(y);</span><br><span class="line">        //divideAndRemainder</span><br><span class="line">        x = x.mod(y)</span><br><span class="line">        //商和余数都要的情况</span><br><span class="line">        BigInteger[] bis = x.divideAndRemainder(y);</span><br><span class="line">        System.out.println(x);</span><br><span class="line">//其中需要注意的是赋值必须i=i.add(new BigInteger(&quot;1&quot;))  </span><br><span class="line">//比较大小采用compareTo</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.math.BigInteger;</span><br><span class="line">import java.util.*;</span><br><span class="line">public class test &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">//        System.out.println(sc.next());</span><br><span class="line">        String s = sc.nextLine();</span><br><span class="line">        BigInteger x = new BigInteger(s);</span><br><span class="line">        for (BigInteger i = new BigInteger(&quot;2&quot;);x.compareTo(i.multiply(i)) &gt; -1 ;i=i.add(new BigInteger(&quot;1&quot;)) ) &#123;</span><br><span class="line">            while((x.mod(i.multiply(i))).compareTo(new BigInteger(&quot;0&quot;)) == 0) x = x.divide(i.multiply(i));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-日历问题"><a href="#4-日历问题" class="headerlink" title="4.日历问题"></a>4.日历问题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">YEAR //指示年。 </span><br><span class="line">MONTH //指示月份。</span><br><span class="line">DAY_OF_MONTH //指示一个月中的某天。</span><br><span class="line">DAY_OF_WEEK //指示一个星期中的某天。</span><br><span class="line">DAY_OF_YEAR //指示当前年中的天数。</span><br><span class="line">DAY_OF_WEEK_IN_MONTH //指示当前月中的第几个星期。</span><br><span class="line">HOUR //指示当天中的某小时 MINUTE 指示当前小时中的某分钟</span><br><span class="line">SECOND //指示当前分钟中的某秒</span><br><span class="line">Calendar calendar = Calendar.getInstance(); //创建方法</span><br><span class="line">calendar.set(calendar.YEAR, year);//写入</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="常用算法复习"><a href="#常用算法复习" class="headerlink" title="常用算法复习"></a>常用算法复习</h2><h3 id="1-快排"><a href="#1-快排" class="headerlink" title="1.快排"></a>1.快排</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int n;</span><br><span class="line">    static int[] arr = new int[N];</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            arr[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        quickSort(arr, 0, n - 1);</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.printf(arr[i]+&quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void quickSort(int[] arr, int l, int r) &#123;</span><br><span class="line">        //采用了递归得设置出口不然一直循环</span><br><span class="line">        if (l &gt;= r) return;</span><br><span class="line">        //小技巧，l-1，r+1.和下面对应</span><br><span class="line">        int mid = arr[l + r &gt;&gt; 1], i = l - 1, j = r + 1;</span><br><span class="line">        while (i &lt; j) &#123;</span><br><span class="line">            do &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125; while (arr[i] &lt; mid);</span><br><span class="line">            do &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125; while (arr[j] &gt; mid);</span><br><span class="line">            //条件i&lt;j</span><br><span class="line">            if (i &lt; j) &#123;</span><br><span class="line">                int t = arr[i];</span><br><span class="line">                arr[i] = arr[j];</span><br><span class="line">                arr[j] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //传递的包括左右范围和数组arr</span><br><span class="line">        quickSort(arr, l, i);</span><br><span class="line">        quickSort(arr, i + 1, r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//第k个数</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class Main &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int n;</span><br><span class="line">    static int[] arr = new int[N];</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        int k = sc.nextInt();</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            arr[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        quickSort(arr, 0, n - 1,k);</span><br><span class="line">        System.out.println(arr[k-1]);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void quickSort(int[] arr, int l, int r,int k) &#123;</span><br><span class="line">        //采用了递归得设置出口不然一直循环</span><br><span class="line">        if (l &gt;= r) return;</span><br><span class="line">        //小技巧，l-1，r+1.和下面对应</span><br><span class="line">        int mid = arr[l + r &gt;&gt; 1], i = l - 1, j = r + 1;</span><br><span class="line">        while (i &lt; j) &#123;</span><br><span class="line">            do &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125; while (arr[i] &lt; mid);</span><br><span class="line">            do &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125; while (arr[j] &gt; mid);</span><br><span class="line">            //条件i&lt;j</span><br><span class="line">            if (i &lt; j) &#123;</span><br><span class="line">                int t = arr[i];</span><br><span class="line">                arr[i] = arr[j];</span><br><span class="line">                arr[j] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //传递的包括左右范围和数组arr，这里必须得用j</span><br><span class="line">        int len = j - l +1;</span><br><span class="line">        if(k &lt;= len )&#123;</span><br><span class="line">            quickSort(arr, l, j, k);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            quickSort(arr, j + 1, r, k - len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-归并排序"><a href="#2-归并排序" class="headerlink" title="2.归并排序"></a>2.归并排序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int n;</span><br><span class="line">    static int[] arr = new int[N];</span><br><span class="line">    static int[] t = new int[N];</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            arr[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        mergeSort(arr, 0, n - 1);</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.printf(arr[i] + &quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    public static void mergeSort(int[] arr,int l, int r) &#123;</span><br><span class="line">        if (l &gt;= r) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        int mid = l + r &gt;&gt; 1;</span><br><span class="line">        mergeSort(arr, l, mid );</span><br><span class="line">        mergeSort(arr, mid + 1, r);</span><br><span class="line">        int i = l, j = mid+1, k = 0;</span><br><span class="line">        while (i &lt;= mid &amp;&amp; j &lt;= r) &#123;</span><br><span class="line">            if (arr[i] &lt;= arr[j]) &#123;</span><br><span class="line">                t[k++] = arr[i++];</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                t[k++] = arr[j++];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        while (i &lt;= mid) &#123;</span><br><span class="line">            t[k++] = arr[i++];</span><br><span class="line">        &#125;</span><br><span class="line">        while (j &lt;= r) &#123;</span><br><span class="line">            t[k++] = arr[j++];</span><br><span class="line">        &#125;</span><br><span class="line">        for (i = l, j = 0; i &lt;= r; i++, j++) &#123;</span><br><span class="line">            arr[i] = t[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//逆对数</span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Main &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int[] q = new int[N];</span><br><span class="line">    static int[] t = new int[N];</span><br><span class="line">    static long ans;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        int n = Integer.parseInt(sc.nextLine());</span><br><span class="line">        // BufferedInputStream br = new BufferedInputStream(System.in);</span><br><span class="line">        String[] s = sc.nextLine().split(&quot; &quot;);</span><br><span class="line">        for(int i = 0;i &lt; n;i++)&#123;</span><br><span class="line">            q[i] = Integer.parseInt(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        mergeSort(q, 0, n-1);</span><br><span class="line">        System.out.print(ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static void mergeSort(int[] q,int l,int r)&#123;</span><br><span class="line">        if( l &gt;= r) return;</span><br><span class="line">        //先分成一个个的数字</span><br><span class="line">        int mid = l+r&gt;&gt;1;</span><br><span class="line">        mergeSort(q, l,mid);</span><br><span class="line">        mergeSort(q,mid + 1,r);</span><br><span class="line"></span><br><span class="line">        //合并数字（一段数组）</span><br><span class="line">        int i =l,j = mid+1 ,k = 0;</span><br><span class="line">        //保障至少有一段数字没有取完</span><br><span class="line">        while(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">            if(q[i] &lt;= q[j])&#123;</span><br><span class="line">                t[k++] = q[i++];</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                t[k++] = q[j++];</span><br><span class="line">                ans +=mid - i + 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //将剩余的那段数组直接接在t后面</span><br><span class="line">        while(i &lt;= mid) t[k++] = q[i++];</span><br><span class="line">        while(j &lt;= r) t[k++] =q[j++];</span><br><span class="line">        //特别强调这里的i是从l开始的，为啥呢，因为在归的过程中q有一段是排序好的所以不用动，只用把剩下的接在后面</span><br><span class="line">        for(i =l,j=0;i&lt;=r;i++,j++)  &#123;</span><br><span class="line">            q[i]=t[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-前缀和"><a href="#3-前缀和" class="headerlink" title="3.前缀和"></a>3.前缀和</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line">import java.math.*;</span><br><span class="line">public class Main &#123;</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int[] q = new int[N];</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">int n = sc.nextInt();</span><br><span class="line">int m = sc.nextInt();</span><br><span class="line"></span><br><span class="line">for(int i = 1;i &lt;=n;i++) &#123;</span><br><span class="line">int t =sc.nextInt();</span><br><span class="line">q[i] = t + q[i-1];</span><br><span class="line">&#125;</span><br><span class="line">while(m--&gt;0) &#123;</span><br><span class="line">int x = sc.nextInt();</span><br><span class="line">int y = sc.nextInt();</span><br><span class="line">System.out.println(q[y]-q[x-1]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//前缀子矩阵</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 10010;</span><br><span class="line">    static int n, m, q;</span><br><span class="line">    static int[][] arr = new int[N][N];</span><br><span class="line">    static int[][] s = new int[N][N];</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n  = sc.nextInt();</span><br><span class="line">        m = sc.nextInt();</span><br><span class="line">        q = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            for (int j = 1; j &lt;= m; j++) &#123;</span><br><span class="line">                arr[i][j] = sc.nextInt();</span><br><span class="line">                s[i][j] = arr[i][j] + s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        while (q-- &gt; 0) &#123;</span><br><span class="line">            int x1 = sc.nextInt();</span><br><span class="line">            int y1 = sc.nextInt();</span><br><span class="line">            int x2 = sc.nextInt();</span><br><span class="line">            int y2 = sc.nextInt();</span><br><span class="line">            System.out.println(s[x2][y2] - s[x2][y1-1] - s[x1-1][y2] + s[x1-1][y1-1]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//差分</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int[] q = new int[N];</span><br><span class="line">    static int n,k;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        k = sc.nextInt();</span><br><span class="line">        int z = 0;</span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            int t = sc.nextInt();</span><br><span class="line">            q[i] = t - z;</span><br><span class="line">            z = t;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while (k-- &gt; 0) &#123;</span><br><span class="line">            int l = sc.nextInt();</span><br><span class="line">            int r = sc.nextInt();</span><br><span class="line">            int x = sc.nextInt();</span><br><span class="line">            q[l] += x;q[r+1]-= x;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int num = 0;</span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            num+= q[i];</span><br><span class="line">            System.out.printf(num + &quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//差分矩阵</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 1010;</span><br><span class="line">    static int[][] a = new int[N][N];</span><br><span class="line">    static int[][] b = new int[N][N];</span><br><span class="line"></span><br><span class="line">    static int n,m,k;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        m = sc.nextInt();</span><br><span class="line">        k = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            for (int j = 1; j &lt;= m; j++) &#123;</span><br><span class="line">                a[i][j] = sc.nextInt();</span><br><span class="line">                b[i][j] = a[i - 1][j - 1] - a[i - 1][j] - a[i][j - 1] + a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            for (int j = 1; j &lt;= m; j++) &#123;</span><br><span class="line">                System.out.printf(b[i][j] + &quot; &quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">//        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">//            for (int j = 1; j &lt;= m; j++) &#123;</span><br><span class="line">//                insert(i, j, i, j, a[i][j]);</span><br><span class="line">//            &#125;</span><br><span class="line">//        &#125;</span><br><span class="line">        while (k-- &gt; 0) &#123;</span><br><span class="line">            int x1 = sc.nextInt();</span><br><span class="line">            int y1 = sc.nextInt();</span><br><span class="line">            int x2 = sc.nextInt();</span><br><span class="line">            int y2 = sc.nextInt();</span><br><span class="line">            int c= sc.nextInt();</span><br><span class="line">            insert(x1,y1,x2,y2,c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            for (int j = 1; j &lt;= m; j++) &#123;</span><br><span class="line">//                b[i][j] += b[i - 1][j] + b[i][j - 1] - b[i - 1][j - 1];</span><br><span class="line">                a[i][j] = a[i - 1][j] + a[i][j - 1] - a[i - 1][j - 1]+b[i][j];</span><br><span class="line">                System.out.printf(a[i][j]+&quot; &quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void insert(int x1, int y1, int x2, int y2, int c) &#123;</span><br><span class="line">        b[x1][y1] += c;</span><br><span class="line">        b[x1][y2+1]-= c;</span><br><span class="line">        b[x2 + 1][y1] -= c;</span><br><span class="line">        b[x2 + 1][y2 + 1] += c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-双指针"><a href="#4-双指针" class="headerlink" title="4.双指针"></a>4.双指针</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">//最长连续不重复子序列</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int[] a = new int[N];</span><br><span class="line">    static int[] s = new int[N];</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        int n = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            a[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        int ans =0,j =0;</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            s[a[i]]++;</span><br><span class="line">            while (s[a[i]] &gt; 1) &#123;</span><br><span class="line">                s[a[j]]--;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            ans = Math.max(i - j + 1,ans);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//数组元素的目标和</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int[] a = new int[N];</span><br><span class="line">    static int[] b = new int[N];</span><br><span class="line">    static int[] s = new int[N];</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        int n = sc.nextInt();</span><br><span class="line">        int m = sc.nextInt();</span><br><span class="line">        int k = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            a[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 0; i &lt; m; i++) &#123;</span><br><span class="line">            b[i] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 0, j = m - 1; i &lt; n; i++) &#123;</span><br><span class="line">            while (j&gt; 0 &amp;&amp; a[i] + b[j] &gt; k) &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            if (a[i] + b[j] == k) &#123;</span><br><span class="line">                System.out.println(i+&quot; &quot;+j);</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-位运算"><a href="#5-位运算" class="headerlink" title="5.位运算"></a>5.位运算</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int[] a = new int[N];</span><br><span class="line">    static int[] b = new int[N];</span><br><span class="line">    static int[] s = new int[N];</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        int n = sc.nextInt();</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            int k = sc.nextInt();</span><br><span class="line">            int c = 0;</span><br><span class="line">            while (k != 0) &#123;</span><br><span class="line">                c++;</span><br><span class="line">                k = k&amp;(k-1);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(c+&quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-离散化"><a href="#6-离散化" class="headerlink" title="6.离散化"></a>6.离散化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">//区间和</span><br><span class="line"></span><br><span class="line">import javax.jnlp.ClipboardService;</span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.nio.file.Path;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line">    static int N = 300010;</span><br><span class="line">    static int[] a = new int[N];</span><br><span class="line">    static int[] s = new int[N];</span><br><span class="line">    static List&lt;Integer&gt; alls = new ArrayList&lt;&gt;();</span><br><span class="line">    static List&lt;Pair&gt; add = new ArrayList&lt;&gt;();</span><br><span class="line">    static List&lt;Pair&gt; query = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    static class Pair&#123;</span><br><span class="line">        int first;</span><br><span class="line">        int second;</span><br><span class="line">        public Pair(int first,int second)&#123;</span><br><span class="line">            this.first = first;</span><br><span class="line">            this.second = second;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        int n = sc.nextInt();</span><br><span class="line">        int m = sc.nextInt();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            int x = sc.nextInt();</span><br><span class="line">            int c = sc.nextInt();</span><br><span class="line">            alls.add(x);</span><br><span class="line">            add.add(new Pair(x, c));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; m; i++) &#123;</span><br><span class="line">            int l = sc.nextInt();</span><br><span class="line">            int r = sc.nextInt();</span><br><span class="line">            alls.add(l);</span><br><span class="line">            alls.add(r);</span><br><span class="line">            query.add(new Pair(l, r));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        alls.sort((a, b) -&gt; a - b);</span><br><span class="line">        int len = unique(alls);</span><br><span class="line">        alls = alls.subList(0, len);</span><br><span class="line">//        System.out.println(alls.get(0));</span><br><span class="line">        for (Pair p : add) &#123;</span><br><span class="line">            int index = find(alls,p.first);</span><br><span class="line">            a[index]+=p.second;</span><br><span class="line">        &#125;</span><br><span class="line">//        for (int i = 1; i &lt;= alls.size() ; i++) &#123;</span><br><span class="line">//            System.out.println(a[i]);</span><br><span class="line">//        &#125;</span><br><span class="line">        for (int i = 1; i &lt;= alls.size(); i++) &#123;</span><br><span class="line">            s[i] = s[i - 1] + a[i];</span><br><span class="line">//            System.out.println(s[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (Pair p : query)&#123;</span><br><span class="line">            int l = find(alls,p.first);</span><br><span class="line">            int r = find(alls, p.second);</span><br><span class="line">//            System.out.println(p.first+&quot; &quot;+ p.second);</span><br><span class="line">            System.out.println(s[r]- s[l-1]);</span><br><span class="line">        &#125;</span><br><span class="line">//        for (int i = 0; i &lt; n + 2*m; i++) &#123;</span><br><span class="line">//            System.out.println(alls.get(i));</span><br><span class="line">//        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    private static int unique(List&lt;Integer&gt; alls) &#123;</span><br><span class="line">        int j = 0;</span><br><span class="line">        for (int i = 0; i &lt; alls.size(); i++) &#123;</span><br><span class="line">            if (i== 0||!alls.get(i).equals(alls.get(i - 1))) &#123;</span><br><span class="line">                alls.set(j, alls.get(i));</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static int find(List&lt;Integer&gt; alls, int x) &#123;</span><br><span class="line">        int l = 0, r = alls.size() - 1;</span><br><span class="line">        while (l &lt; r)&#123;</span><br><span class="line">            int m = l+r &gt;&gt;1;</span><br><span class="line">            if (alls.get(m) &gt;= x) &#123;</span><br><span class="line">                r = m;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                l = m+1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return r+1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @Author xiawei</span><br><span class="line"> * @Date 2023/4/5 20:01</span><br><span class="line"> * @注释</span><br><span class="line"> */</span><br><span class="line">public class Main &#123;</span><br><span class="line">    static int N = 200010;</span><br><span class="line">    static int n,m;</span><br><span class="line">    static int[] s = new int[N];</span><br><span class="line">    static PriorityQueue&lt;int[]&gt;[] q = new PriorityQueue[N];</span><br><span class="line"></span><br><span class="line">    static Comparator&lt;int[]&gt; comps = new Comparator&lt;int[]&gt;() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public int compare(int[] o1, int[] o2) &#123;</span><br><span class="line">            return o1[0] - o2[0];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        m = sc.nextInt();</span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            s[i] = sc.nextInt();</span><br><span class="line">            q[i] = new PriorityQueue&lt;int[]&gt;(comps);</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 1; i &lt;= m; i++) &#123;</span><br><span class="line">            int a = sc.nextInt();</span><br><span class="line">            int b = sc.nextInt();</span><br><span class="line">            int c = sc.nextInt();</span><br><span class="line">            int d = sc.nextInt();</span><br><span class="line">            int[] g = new int[]&#123;a, b, c, d&#125;;</span><br><span class="line">            while (!q[b].isEmpty() &amp;&amp; q[b].peek()[0] &lt;= a) &#123;</span><br><span class="line">                s[b] += q[b].peek()[1];</span><br><span class="line">                q[b].poll();</span><br><span class="line">            &#125;</span><br><span class="line">            if (s[b] &lt; d) &#123;</span><br><span class="line">                System.out.println(&quot;-1&quot;);</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                s[b]-=d;</span><br><span class="line">                q[b].add(new int[]&#123;a+c, d&#125;);</span><br><span class="line">                System.out.println(s[b]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-DFS"><a href="#7-DFS" class="headerlink" title="7.DFS"></a>7.DFS</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">//八皇后</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @version 1.0</span><br><span class="line">     * @Author xiawei</span><br><span class="line">     * @Date 2023/3/16 15:20</span><br><span class="line">     * @注释</span><br><span class="line">     */</span><br><span class="line">    public class test1 &#123;</span><br><span class="line">        static int n;</span><br><span class="line">        static int N =10;</span><br><span class="line">        static char[][] g = new char[N][N];</span><br><span class="line">        static boolean[][] st = new boolean[N][N];</span><br><span class="line">        static boolean[] val = new boolean[N];</span><br><span class="line">        static boolean[] dg = new boolean[N];</span><br><span class="line">        static boolean[] udg = new boolean[N];</span><br><span class="line">        static final BufferedReader cin = new BufferedReader(new InputStreamReader(System.in));</span><br><span class="line">        static final PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        public static void main(String[] args) throws IOException&#123;</span><br><span class="line">            n = Integer.parseInt(cin.readLine());</span><br><span class="line">            for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">                for (int j = 0; j &lt; n; j++) &#123;</span><br><span class="line">                    g[i][j] = &#x27;.&#x27;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            dfs(0);</span><br><span class="line">            out.flush();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void dfs(int k) &#123;</span><br><span class="line">            if(k== n)&#123;</span><br><span class="line">                for (int i = 0; i &lt; n ; i++) &#123;</span><br><span class="line">                    for (int j = 0; j &lt; n; j++) &#123;</span><br><span class="line">                        out.print(g[i][j]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    out.println();</span><br><span class="line">                &#125;</span><br><span class="line">                out.println();</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            for(int i =0;i&lt;n;i++) &#123;</span><br><span class="line">                if(!val[i]&amp;&amp; !dg[i+k]&amp;&amp; !udg[i-k+n])</span><br><span class="line">                &#123;</span><br><span class="line">                    g[k][i] = &#x27;Q&#x27;;</span><br><span class="line">                    val[i] = true;</span><br><span class="line">                    dg[i+k] = true;</span><br><span class="line">                    udg[i-k+n] = true;</span><br><span class="line">                    dfs(k+1);</span><br><span class="line">                    g[k][i] = &#x27;.&#x27;;</span><br><span class="line">                    val[i] = false;</span><br><span class="line">                    dg[i+k] = false;</span><br><span class="line">                    udg[i-k+n] = false;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//树的重心</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.math.BigInteger;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class test &#123;</span><br><span class="line"></span><br><span class="line">    final static BufferedReader cin = new BufferedReader(new InputStreamReader(System.in));</span><br><span class="line">    final static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int n;</span><br><span class="line">    static int ans = Integer.MAX_VALUE;</span><br><span class="line">    static boolean[] st = new boolean[N];</span><br><span class="line">    //采用邻接表存储</span><br><span class="line">    static int idx;</span><br><span class="line">    static int[] e = new int[N &gt;&gt; 1];</span><br><span class="line">    static int[] h = new int[N];</span><br><span class="line">    static int[] ne = new int[N];</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws IOException &#123;</span><br><span class="line">        String[] ss = cin.readLine().split(&quot; &quot;);</span><br><span class="line">        n = Integer.parseInt(ss[0]);</span><br><span class="line">        Arrays.fill(h, -1);</span><br><span class="line">        for (int i = 0; i &lt; n -1; i++) &#123;</span><br><span class="line">            ss = cin.readLine().split(&quot; &quot;);</span><br><span class="line">            int a = Integer.parseInt(ss[0]);</span><br><span class="line">            int b = Integer.parseInt(ss[1]);</span><br><span class="line">            add(a,b);</span><br><span class="line">            add(b, a);</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(1);</span><br><span class="line">        out.println(ans);</span><br><span class="line">        out.flush();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    //采用深度遍历每一个点看他的孩子有几个节点</span><br><span class="line">    private static int dfs(int u) &#123;</span><br><span class="line">        st[u] = true;</span><br><span class="line"></span><br><span class="line">        int sum = 1, res = 0;</span><br><span class="line">        for (int i = h[u]; i != -1; i = ne[i]) &#123;</span><br><span class="line">            int j = e[i];</span><br><span class="line">            if (!st[j]) &#123;</span><br><span class="line">                int x = dfs(j);</span><br><span class="line">                //比较孩子节点中较大的节点数</span><br><span class="line">                res = Math.max(res, x);</span><br><span class="line">                //记录所有的孩子节点</span><br><span class="line">                sum += x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //n-sum不用-1因为他是无差别的遍历每一个节点记录他的孩子节点</span><br><span class="line">        //已经记录了他孩子节点的最大数，只需要在计算剩余的节点数</span><br><span class="line">        res = Math.max(res, n - sum);</span><br><span class="line">        ans = Math.min(res, ans);</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void add(int a, int b) &#123;</span><br><span class="line">        e[idx] = b;</span><br><span class="line">        ne[idx] = h[a];</span><br><span class="line">        h[a] = idx++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-BFS"><a href="#8-BFS" class="headerlink" title="8.BFS"></a>8.BFS</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">//八位码</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @version 1.0</span><br><span class="line">     * @Author xiawei</span><br><span class="line">     * @Date 2023/3/16 15:20</span><br><span class="line">     * @注释</span><br><span class="line">     */</span><br><span class="line">    public class test1 &#123;</span><br><span class="line">        final static BufferedReader cin = new BufferedReader(new InputStreamReader(System.in));</span><br><span class="line">        final static PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));</span><br><span class="line"></span><br><span class="line">        public static void main(String[] args) throws IOException&#123;</span><br><span class="line">            String[] ss = cin.readLine().split(&quot; &quot;);</span><br><span class="line">            String start = &quot;&quot;;</span><br><span class="line">            for (int i = 0; i &lt; ss.length; i++) &#123;</span><br><span class="line">                start += ss[i];</span><br><span class="line">            &#125;</span><br><span class="line">            out.println(bfs(start));</span><br><span class="line">            out.flush();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static int bfs(String start) &#123;</span><br><span class="line">            Queue&lt;String&gt; q = new LinkedList&lt;&gt;();</span><br><span class="line">            q.offer(start);</span><br><span class="line">            HashMap&lt;String, Integer&gt; m = new HashMap&lt;&gt;();</span><br><span class="line">            m.put(start, 0);</span><br><span class="line">            String end = &quot;12345678x&quot;;</span><br><span class="line">            int[] dx = new int[]&#123;-1, 1, 0, 0&#125;;</span><br><span class="line">            int[] dy = new int[]&#123;0, 0, 1, -1&#125;;</span><br><span class="line">            while (!q.isEmpty()) &#123;</span><br><span class="line">                String p = q.poll();</span><br><span class="line">                if(end.equals(p))&#123;</span><br><span class="line">                    return m.get(end);</span><br><span class="line">                &#125;</span><br><span class="line">                int z = p.indexOf(&#x27;x&#x27;);</span><br><span class="line">                int x = z/3;</span><br><span class="line">                int y = z % 3;</span><br><span class="line">                for (int i = 0; i &lt; 4; i++) &#123;</span><br><span class="line">                    int xx = x + dx[i];</span><br><span class="line">                    int yy = y + dy[i];</span><br><span class="line">                    if (xx &gt;= 0 &amp;&amp; xx &lt; 3 &amp;&amp; yy &gt;= 0 &amp;&amp; yy &lt; 3 ) &#123;</span><br><span class="line">                        char[] c = p.toCharArray();</span><br><span class="line">                        swap(c, z, xx*3+yy);</span><br><span class="line">                        String ne= new String(c);</span><br><span class="line">                        if (!m.containsKey(ne)) &#123;</span><br><span class="line">                            m.put(ne ,m.get(p)+1);</span><br><span class="line">                            q.offer(ne);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void swap(char[] c, int x, int y) &#123;</span><br><span class="line">            char t = c[x];</span><br><span class="line">            c[x] = c[y];</span><br><span class="line">            c[y] = t;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-最短路spfs"><a href="#9-最短路spfs" class="headerlink" title="9.最短路spfs"></a>9.最短路spfs</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">package 搜索与图论.spfa;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.LinkedList;</span><br><span class="line">import java.util.Queue;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @Author xiawei</span><br><span class="line"> * @Date 2023/3/22 20:24</span><br><span class="line"> * @注释</span><br><span class="line"> */</span><br><span class="line">public class spfa求最短路 &#123;</span><br><span class="line">    //spfa和dijkstra算法很像</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int n,m;</span><br><span class="line">    //采用队列和st</span><br><span class="line">    static int[] dist = new int[N];</span><br><span class="line">    static boolean[] st = new boolean[N];</span><br><span class="line"></span><br><span class="line">    //存储邻接表</span><br><span class="line">    static int idx ;</span><br><span class="line">    static int[] e = new int[N];</span><br><span class="line">    static int[] ne = new int[N];</span><br><span class="line">    static int[] w = new int[N];</span><br><span class="line">    static int[] h = new int[N];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        m = sc.nextInt();</span><br><span class="line">        Arrays.fill(h, -1);</span><br><span class="line">        for (int i = 0; i &lt; m; i++) &#123;</span><br><span class="line">            int a = sc.nextInt();</span><br><span class="line">            int b = sc.nextInt();</span><br><span class="line">            int c = sc.nextInt();</span><br><span class="line">            aad(a, b, c);</span><br><span class="line">        &#125;</span><br><span class="line">        spfa(1);</span><br><span class="line">        if (dist[n] == 0x3f3f3f) &#123;</span><br><span class="line">            System.out.println(&quot;impossible&quot;);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            System.out.println(dist[n]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void spfa(int a) &#123;</span><br><span class="line">        Arrays.fill(dist, 0x3f3f3f);</span><br><span class="line">        dist[1] = 0;</span><br><span class="line"></span><br><span class="line">        Queue&lt;Integer&gt; q = new LinkedList&lt;&gt;();</span><br><span class="line">        q.offer(a);</span><br><span class="line">        while (!q.isEmpty()) &#123;</span><br><span class="line">            int t = q.poll();</span><br><span class="line">            st[t] = false;</span><br><span class="line">            for (int i = h[t]; i != -1; i = ne[i]) &#123;</span><br><span class="line">                int j = e[i];</span><br><span class="line">                if (dist[j] &gt; dist[t] + w[i]) &#123;</span><br><span class="line">                    dist[j] = dist[t] + w[i];</span><br><span class="line">                    // 如果队列中已存在v，则不需要将v重复插入,优化一下</span><br><span class="line">                    if (!st[j]) &#123;</span><br><span class="line">                        q.offer(j);</span><br><span class="line">                        st[j] = true;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void aad(int a, int b, int c) &#123;</span><br><span class="line">        e[idx] = b;</span><br><span class="line">        w[idx] = c;</span><br><span class="line">        ne[idx] = h[a];</span><br><span class="line">        h[a] = idx++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="10-KMP"><a href="#10-KMP" class="headerlink" title="10.KMP"></a>10.KMP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">package 数据结构.KMP;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line">import java.util.Stack;</span><br><span class="line"></span><br><span class="line">public class kmp &#123;</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int M = 1000010;</span><br><span class="line">    static int[] ne = new int[M];</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws IOException &#123;</span><br><span class="line">        //因为io数据太大了scnner直接超时了换成BufferedReader和BuffferedWriter</span><br><span class="line">        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));</span><br><span class="line">        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));</span><br><span class="line">//        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        int n = Integer.parseInt(read.readLine());</span><br><span class="line">        String match = read.readLine();</span><br><span class="line">        int m = Integer.parseInt(read.readLine());</span><br><span class="line">        String arr = read.readLine();</span><br><span class="line"></span><br><span class="line">        //将字符串转化为char</span><br><span class="line">        char[] p = match.toCharArray();</span><br><span class="line">        char[] s = arr.toCharArray();</span><br><span class="line"></span><br><span class="line">        //初始化next数组</span><br><span class="line">        for (int i = 1, j = 0; i &lt; p.length; i++) &#123;</span><br><span class="line">            //前缀不相同</span><br><span class="line">            while (j &gt; 0 &amp;&amp; p[i] != p[j])&#123;</span><br><span class="line">                j = ne[j-1];</span><br><span class="line">            &#125;</span><br><span class="line">            //前缀相同</span><br><span class="line">            if (p[i] == p[j]) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            ne[i] = j;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //进行遍历</span><br><span class="line">        //i是目标字符串的下标，j是匹配字符串的下标</span><br><span class="line">        for (int i = 0,j = 0; i &lt; s.length; i++) &#123;</span><br><span class="line">            while (j &gt; 0 &amp;&amp; s[i] != p[j])&#123;</span><br><span class="line">                j = ne[j-1];</span><br><span class="line">                //</span><br><span class="line">            &#125;</span><br><span class="line">            if (s[i] == p[j])&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            if (j == p.length)&#123;</span><br><span class="line">                writer.write(i - p.length + 1 + &quot; &quot;);</span><br><span class="line">                j = ne[j-1];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        writer.flush();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="11-并查集"><a href="#11-并查集" class="headerlink" title="11.并查集"></a>11.并查集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">package 数据结构.并查集;</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @Author xiawei</span><br><span class="line"> * @Date 2023/3/24 20:15</span><br><span class="line"> * @注释</span><br><span class="line"> */</span><br><span class="line">public class 合并集合 &#123;</span><br><span class="line">    //用于集合合并，判断元素是否属于一个集合</span><br><span class="line">    //基本原理：每个集合用一棵树来表示，树根的编号就是整个集合的编号，每个节点存储它的父节点，p[x]表示x的父节点</span><br><span class="line">    //如何判断树根？if(p[x]==x)</span><br><span class="line">    //如何求x的集合编号？find(x)</span><br><span class="line">    //如何合并两个集合?p[find(a)] = find(b)</span><br><span class="line"></span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int n, m;</span><br><span class="line">    static int[] p = new int[N];</span><br><span class="line"></span><br><span class="line">    public static int find(int x) &#123;</span><br><span class="line">        if (p[x] != x) p[x] = find(p[x]);</span><br><span class="line">        return p[x];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        String[] s = sc.nextLine().split(&quot; &quot;);</span><br><span class="line">        n = Integer.parseInt(s[0]);</span><br><span class="line">        m = Integer.parseInt(s[1]);</span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            p[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while (m-- &gt; 0) &#123;</span><br><span class="line">            String[] s1 = sc.nextLine().split(&quot; &quot;);</span><br><span class="line">            int a = Integer.parseInt(s1[1]);</span><br><span class="line">            int b = Integer.parseInt(s1[2]);</span><br><span class="line">            if (&quot;M&quot;.equals(s1[0])) &#123;</span><br><span class="line">                p[find(b)] = find(a);</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                if (find(a) == find(b)) &#123;</span><br><span class="line">                    System.out.println(&quot;Yes&quot;);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    System.out.println(&quot;No&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package 数据结构.并查集;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @Author xiawei</span><br><span class="line"> * @Date 2023/3/24 20:42</span><br><span class="line"> * @注释</span><br><span class="line"> */</span><br><span class="line">public class 连通块中点的数量 &#123;</span><br><span class="line">    //与最祼并查集的区别:</span><br><span class="line">    //初始化时需要将s[i]=1</span><br><span class="line">    //合并时，需要s[find(b)]+=s[find(a)]</span><br><span class="line">    //查询时：s[find(a)]</span><br><span class="line">    static int N = 100010;</span><br><span class="line">    static int n, m;</span><br><span class="line">    static int[] p = new int[N];</span><br><span class="line">    static int[] size = new int[N];</span><br><span class="line"></span><br><span class="line">    public static int find(int x) &#123;</span><br><span class="line">        if (p[x] != x) p[x] = find(p[x]);</span><br><span class="line">        return p[x];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        String[] s = sc.nextLine().split(&quot; &quot;);</span><br><span class="line">        n = Integer.parseInt(s[0]);</span><br><span class="line">        m = Integer.parseInt(s[1]);</span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            p[i] = i;</span><br><span class="line">            size[i] = 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while (m-- &gt; 0) &#123;</span><br><span class="line">            String[] s1 = sc.nextLine().split(&quot; &quot;);</span><br><span class="line">            if (&quot;C&quot;.equals(s1[0])) &#123;</span><br><span class="line">                int a = Integer.parseInt(s1[1]);</span><br><span class="line">                int b = Integer.parseInt(s1[2]);</span><br><span class="line">                if(find(a) == find(b)) continue;</span><br><span class="line">                size[find(a)] += size[find(b)];</span><br><span class="line">                p[find(b)] = find(a);</span><br><span class="line"></span><br><span class="line">            &#125;else if (&quot;Q1&quot;.equals(s1[0]))&#123;</span><br><span class="line">                int a = Integer.parseInt(s1[1]);</span><br><span class="line">                int b = Integer.parseInt(s1[2]);</span><br><span class="line">                if (find(a) == find(b)) &#123;</span><br><span class="line">                    System.out.println(&quot;Yes&quot;);</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    System.out.println(&quot;No&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                int a = Integer.parseInt(s1[1]);</span><br><span class="line">                System.out.println(size[find(a)]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">package 数据结构.并查集;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedInputStream;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @Author xiawei</span><br><span class="line"> * @Date 2023/3/26 14:33</span><br><span class="line"> * @注释</span><br><span class="line"> */</span><br><span class="line">public class 食物链 &#123;</span><br><span class="line">    static int N = 500010;</span><br><span class="line">    static int M = 3;</span><br><span class="line">    static int n, m;</span><br><span class="line">    static int[] d = new int[N];</span><br><span class="line">    static int[] p = new int[N];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner sc = new Scanner(new BufferedInputStream(System.in));</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        m = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            p[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        //说谎话的数量,最初没有违背别人的话都视为真话</span><br><span class="line">        int res = 0;</span><br><span class="line">        while (m-- &gt; 0) &#123;</span><br><span class="line">            int t = sc.nextInt();</span><br><span class="line">            int x = sc.nextInt();</span><br><span class="line">            int y = sc.nextInt();</span><br><span class="line"></span><br><span class="line">            if (x &gt; n || y &gt; n) &#123;</span><br><span class="line">                res ++;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            //找到祖先,</span><br><span class="line">            int px = find(x), py = find(y);</span><br><span class="line">            //x，y为同类</span><br><span class="line">            if (t == 1) &#123;</span><br><span class="line">                //没有记录过x，y，他们可能不同，记录过px，py必定相同</span><br><span class="line">                if (px != py) &#123;</span><br><span class="line">                    p[px] = py;</span><br><span class="line">                    d[px] = d[y] - d[x];</span><br><span class="line">                &#125; else if ((d[y] - d[x]) % M != 0) &#123;</span><br><span class="line">                    res++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                //是捕食关系</span><br><span class="line">                if ((px != py)) &#123;</span><br><span class="line">                    p[px] = py;</span><br><span class="line">                    d[px] = d[y] - d[x] +1;</span><br><span class="line">                &#125; else if ((d[x] - d[y] - 1) % M != 0) &#123;</span><br><span class="line">                    res++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            //找到祖先,</span><br><span class="line">//            int px = find(x), py = find(y);</span><br><span class="line">//            //x，y为同类</span><br><span class="line">//            if (t == 1) &#123;</span><br><span class="line">//                //没有记录过x，y，他们可能不同，记录过px，py必定相同</span><br><span class="line">//                if (px == py &amp;&amp; (d[x] - d[y]) % M != 0) &#123;</span><br><span class="line">//                    res++;</span><br><span class="line">//                &#125;else if (px != py) &#123;</span><br><span class="line">//                    p[px] = py;</span><br><span class="line">//                    d[px] = d[y] - d[x];</span><br><span class="line">//                &#125;</span><br><span class="line">//            &#125;else &#123;</span><br><span class="line">//                //是捕食关系,这里需要注意的是d[x] - d[y] y被减有坑你是负的，做判断减去y就可以避免这个问题</span><br><span class="line">//                if (px == py &amp;&amp; (d[x] - d[y] - 1) % M != 0) &#123;</span><br><span class="line">//                    res++;</span><br><span class="line">//                &#125;else if ((px != py)) &#123;</span><br><span class="line">//                    p[px] = py;</span><br><span class="line">//                    d[px] = d[y] - d[x] +1;</span><br><span class="line">//                &#125;</span><br><span class="line">//            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static int find(int x) &#123;</span><br><span class="line">        if (p[x] != x) &#123;</span><br><span class="line">            //体会递归过程</span><br><span class="line">            int t = find(p[x]);</span><br><span class="line">            d[x] += d[p[x]];</span><br><span class="line">            p[x] = t;</span><br><span class="line">        &#125;</span><br><span class="line">        return p[x];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>软考复习</title>
      <link href="/2022/10/09/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E8%80%83%E5%A4%8D%E4%B9%A0/"/>
      <url>/2022/10/09/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/%E8%BD%AF%E8%80%83%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="软考备考"><a href="#软考备考" class="headerlink" title="软考备考"></a>软考备考</h1><h2 id="软考内容"><a href="#软考内容" class="headerlink" title="软考内容"></a>软考内容</h2><h3 id="上午"><a href="#上午" class="headerlink" title="上午"></a>上午</h3><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007124501501.png" alt="image-20221007124501501"></p><h3 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h3><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007124934698.png" alt="image-20221007124934698"></p><h2 id="课程安排"><a href="#课程安排" class="headerlink" title="课程安排"></a>课程安排</h2><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007125010253.png" alt="image-20221007125010253"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007125151821.png" alt="image-20221007125151821"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007125207589.png" alt="image-20221007125207589"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007125223965.png" alt="image-20221007125223965"></p><h2 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h2><h3 id="海明码"><a href="#海明码" class="headerlink" title="海明码"></a>海明码</h3><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007194755310.png" alt="image-20221007194755310"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007195358165.png" alt="image-20221007195358165"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007195910741.png" alt="image-20221007195910741"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007200312141.png" alt="image-20221007200312141"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007200634978.png" alt="image-20221007200634978"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221007201354165.png" alt="image-20221007201354165"></p><h2 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h2><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008123842341.png" alt="image-20221008123842341"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008125323357.png" alt="image-20221008125323357"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008125512776.png" alt="image-20221008125512776"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008125817625.png" alt="image-20221008125817625"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008130435398.png" alt="image-20221008130435398"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008131109530.png" alt="image-20221008131109530"></p><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008131820278.png" alt="image-20221008131820278"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008132203919.png" alt="image-20221008132203919"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008133428808.png" alt="image-20221008133428808"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008133559838.png" alt="image-20221008133559838"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008134438007.png" alt="image-20221008134438007"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008140051691.png" alt="image-20221008140051691"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008140204223.png" alt="image-20221008140204223"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008140224720.png" alt="image-20221008140224720"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008173600748.png" alt="image-20221008173600748"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008174223124.png" alt="image-20221008174223124"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008185529629.png" alt="image-20221008185529629"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008185809074.png" alt="image-20221008185809074"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008190542363.png" alt="image-20221008190542363"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008190712923.png" alt="image-20221008190712923"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221008190933057.png" alt="image-20221008190933057"></p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009124906591.png" alt="image-20221009124906591"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009125410076.png" alt="image-20221009125410076"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009130503541.png" alt="image-20221009130503541"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009131726998.png" alt="image-20221009131726998"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009133615188.png" alt="image-20221009133615188"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009135248193.png" alt="image-20221009135248193"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009135758742.png" alt="image-20221009135758742"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009165615933.png" alt="image-20221009165615933"></p><p><img src="https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/7919/image-20221009165921993.png" alt="image-20221009165921993"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法学习记录</title>
      <link href="/2022/10/07/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/Markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/10/07/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/Markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown-语法学习"><a href="#markdown-语法学习" class="headerlink" title="markdown 语法学习"></a>markdown 语法学习</h1><h2 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1.代码块"></a>1.代码块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">  hello world</span><br><span class="line">即可在Typora中实现代码块</span><br><span class="line">```JAVA</span><br><span class="line">选择语言</span><br><span class="line"></span><br><span class="line">```JVAV</span><br><span class="line">printf(&quot;hello&quot;)</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>展示如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printf(&quot;hello&quot;)</span><br></pre></td></tr></table></figure><h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 标题一</span><br><span class="line">## 标题二</span><br><span class="line">### 标题三</span><br><span class="line">一共有六个#，六级</span><br><span class="line">“---”任意数量的这个表示分割（至少三个）</span><br><span class="line"># 标题一</span><br><span class="line">----</span><br><span class="line">## 标题二</span><br><span class="line">------</span><br><span class="line">### 标题三</span><br></pre></td></tr></table></figure><h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><hr><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><hr><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><h2 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">**这是加粗**</span><br><span class="line">__这也是加粗__</span><br><span class="line">*这是斜体*</span><br><span class="line">_这也是斜体_</span><br><span class="line">***斜体加粗***</span><br></pre></td></tr></table></figure><p><strong>这是加粗</strong><br><strong>这也是加粗</strong><br><em>这是斜体</em><br><em>这也是斜体</em><br><em><strong>斜体加粗</strong></em></p><h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用"></a>4.引用</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1111</span><br><span class="line">&gt; 2222</span><br><span class="line">&gt; 3333</span><br><span class="line">&gt; 44444</span><br></pre></td></tr></table></figure><blockquote><p>1111<br>2222<br>3333<br>4444</p></blockquote><h2 id="5-列表"><a href="#5-列表" class="headerlink" title="5.列表"></a>5.列表</h2><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"></span><br><span class="line">1. 1</span><br><span class="line">2. 2回车自动下一行添加序号</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容<ol><li>111</li><li>222</li></ol></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* 一级无序列表内容</span><br><span class="line"></span><br><span class="line">   * 二级无序列表内容</span><br><span class="line">   * 二级无序列表内容</span><br><span class="line">   * 二级无序列表内容</span><br></pre></td></tr></table></figure><ul><li><p>一级无序列表内容</p><ul><li><p>二级无序列表内容</p></li><li><p>二级无序列表内容</p></li><li><p>二级无序列表内容</p></li></ul></li></ul><h2 id="6-表格"><a href="#6-表格" class="headerlink" title="6.表格"></a>6.表格</h2><hr><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 | 包起来。此处省略 </span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td align="center">内容</td><td align="center">内容</td><td align="right">内容</td></tr><tr><td align="center">内容</td><td align="center">内容</td><td align="right">内容</td></tr></tbody></table><h2 id="7-进阶"><a href="#7-进阶" class="headerlink" title="7.进阶"></a>7.进阶</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font color=red&gt;我是红色&lt;/font&gt;</span><br><span class="line">&lt;font color=#008000&gt;我是绿色&lt;/font&gt;</span><br><span class="line">&lt;font color=Blue&gt;我是蓝色&lt;/font&gt;</span><br><span class="line">&lt;font size=5&gt;我是尺寸&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;黑体&quot; color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt;</span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=yellow&gt;背景色yellow&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br><span class="line">&lt;center&gt;居中&lt;/center&gt;</span><br><span class="line">&lt;p align=&quot;left&quot;&gt;左对齐&lt;/p&gt;</span><br><span class="line">&lt;p align=&quot;right&quot;&gt;右对齐&lt;/p&gt;</span><br><span class="line">超链接：</span><br><span class="line">&lt;www.baidu.com&gt;</span><br><span class="line">必须带有https://才能跳转</span><br><span class="line">[百度搜索](https://www.baidu.com)</span><br></pre></td></tr></table></figure><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color=red>我是红色</font><br><font color=#008000>我是绿色</font><br><font color=Blue>我是蓝色</font><br><font size=5>我是尺寸</font><br><font face="黑体" color=green size=5>我是黑体，绿色，尺寸为5</font></p><table><tr><td bgcolor=yellow>背景色yellow</td></tr></table><center>居中</center><p align="left">左对齐</p><p align="right">右对齐</p><p>&lt;<a href="http://www.baidu.com&gt;/">www.baidu.com&gt;</a></p><p><a href="https://www.baidu.com/">百度一下，你就知道 </a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2022/10/02/%E7%BD%AE%E9%A1%B6%E5%B8%96%E5%AD%90/%E6%BC%94%E7%A4%BA/"/>
      <url>/2022/10/02/%E7%BD%AE%E9%A1%B6%E5%B8%96%E5%AD%90/%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> </span><br><span class="line">(<span class="params">params</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hellow world&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hellow world&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hellow world&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hellow world&quot;</span>)</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/02/hello-world/"/>
      <url>/2022/10/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
